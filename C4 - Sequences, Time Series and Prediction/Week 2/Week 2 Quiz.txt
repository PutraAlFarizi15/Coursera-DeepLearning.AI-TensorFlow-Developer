1.
Question 1
What is a windowed dataset?




1 / 1 point

A consistent set of subsets of a time series



The time series aligned to a fixed shape



*A fixed-size subset of a time series 



There’s no such thing


Correct
2.
Question 2
What does ‘drop_remainder=True’ do?

1 / 1 point

It ensures that all rows in the data window are the same length by adding data


* It ensures that all rows in the data window are the same length by cropping data



It ensures that the data is all the same shape



It ensures that all data is used


Correct
3.
Question 3
What’s the correct line of code to split an n column window into n-1 columns for features and 1 column for a label


1 / 1 point

dataset = dataset.map(lambda window: (window[n-1], window[1]))



* dataset = dataset.map(lambda window: (window[:-1], window[-1:]))



dataset = dataset.map(lambda window: (window[-1:], window[:-1]))



dataset = dataset.map(lambda window: (window[n], window[1]))


Correct
4.
Question 4
What does MSE stand for?




1 / 1 point

Mean Second error



* Mean Squared error



Mean Slight error



Mean Series error


Correct
5.
Question 5
What does MAE stand for?


1 / 1 point

Mean Average Error



Mean Advanced Error



* Mean Absolute Error



Mean Active Error


Correct
6.
Question 6
If time values are in time[], series values are in series[] and we want to split the series into training and validation at time split_time, what is the correct code?




1 / 1 point

*
time_train = time[:split_time]

x_train = series[:split_time]

time_valid = time[split_time:]

x_valid = series[split_time:]





time_train = time[split_time]

x_train = series[split_time]

time_valid = time[split_time:]

x_valid = series[split_time:]




time_train = time[split_time]

x_train = series[split_time]

time_valid = time[split_time]

x_valid = series[split_time]





time_train = time[:split_time]

x_train = series[:split_time]

time_valid = time[split_time]

x_valid = series[split_time]




Correct
7.
Question 7
If you want to inspect the learned parameters in a layer after training, what’s a good technique to use?




1 / 1 point

* Assign a variable to the layer and add it to the model using that variable. Inspect its properties after training.



Decompile the model and inspect the parameter set for that layer.



Run the model with unit data and inspect the output for that layer.



Iterate through the layers dataset of the model to find the layer you want.


Correct
8.
Question 8
How do you set the learning rate of the SGD optimizer? 




1 / 1 point

You can’t set it



* Use the learning_rate property



Use the Rate property 



Use the RateOfLearning property


Correct
9.
Question 9
If you want to amend the learning rate of the optimizer on the fly, after each epoch. What do you do?




1 / 1 point

* Use a LearningRateScheduler and pass it as a parameter to a callback



Callback to a custom function and change the SGD property



Use a LearningRateScheduler object in the callbacks namespace and assign that to the callback 



You can’t set it


Correct
